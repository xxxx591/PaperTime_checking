package com.tocheck.parent.web.util;

import com.github.pagehelper.PageInfo;
import com.tocheck.parent.common.constans.Constants;
import com.tocheck.parent.common.util.SSDBUtils;
import com.tocheck.parent.core.service.ToCheckTaskService;
import com.tocheck.parent.core.vo.ToCheckTaskVo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Lazy;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

/**
 * @author pangliang
 * @create 2016-12-23 14:23
 **/
@Component
@Lazy(false)
public class ScheduledUtil {

    @Autowired
    private PaperPassUtil paperPassUtil;

    @Autowired
    private PaperFreeUtil paperFreeUtil;

    @Autowired
    private PaperTimeUtil paperTimeUtil;

    @Autowired
    private ToCheckTaskService toCheckTaskService;

    @Autowired
    private SSDBUtils ssdbUtils;

    private ExecutorService exec = Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors());

    //    @Scheduled(fixedDelay = 1 * 1000)
    public void paperPassSubmitCheckTask() {
        paperPassUtil.submitCheckTask();
    }

    //    @Scheduled(fixedDelay = 1 * 1000)
    public void paperPassUpdateCheckTaskStatus() {
        paperPassUtil.updateCheckTaskStatus();
    }

    //    @Scheduled(fixedDelay = 1 * 1000)
    public void paperFreeSubmitCheckTask() {
        paperFreeUtil.submitCheckTask();
    }

    //    @Scheduled(fixedDelay = 1 * 1000)
    public void paperFreeUpdateCheckTaskStatus() {
        paperFreeUtil.updateCheckTaskStatus();
    }

    //    @Scheduled(fixedDelay = 1 * 1000)
    public void paperTimeSubmitCheckTask() {
        paperTimeUtil.submitCheckTask();
    }

    //    @Scheduled(fixedDelay = 1 * 1000)
    public void paperTimeUpdateCheckTaskStatus() {
        paperTimeUtil.updateCheckTaskStatus();
    }


    @Scheduled(fixedDelay = 1 * 1000)
    public void wanFangCheckTask() {
        PageInfo<ToCheckTaskVo> pageInfo = toCheckTaskService.canCheckTask(5, Constants.CHECK_STATUS_WAIT);
        for (ToCheckTaskVo vo : pageInfo.getList()) {
            exec.execute(new WanFangUtil(vo, toCheckTaskService, ssdbUtils));
        }
    }
}

