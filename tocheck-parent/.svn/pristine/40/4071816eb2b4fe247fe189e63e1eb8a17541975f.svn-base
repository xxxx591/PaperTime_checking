package com.paperpass.parent.common.util;

import com.paperpass.parent.common.common.Constants;
import org.apache.commons.lang3.StringUtils;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * Created by kchen on 2015-09-10.
 */
public class FileUtils {
    public static String getWordSuffix(String fileName){
        int index = StringUtils.lastIndexOf(fileName,".");
        String suffix = StringUtils.substring(fileName,index);
        String[] sus = StringUtils.split(Constants.WORD_SUFFIX,"|");
        for(String sfx : sus){
            if(StringUtils.equalsIgnoreCase(sfx,suffix)){
                return suffix;
            }
        }
        return null;
    }

    public static String getWordName(String fileName){
        int index = StringUtils.lastIndexOf(fileName,".");
        return StringUtils.substring(fileName,0,index);
    }

    public static String getImageSuffix(String fileName){
        int index = StringUtils.lastIndexOf(fileName,".");
        String suffix = StringUtils.substring(fileName,index);
        String[] sus = StringUtils.split(Constants.IMG_SUFFIX,"|");
        for(String sfx : sus){
            if(StringUtils.equalsIgnoreCase(sfx,suffix)){
                return suffix;
            }
        }
        return null;
    }

    public static String getImageUrl(String imageName){
        Integer start = StringUtils.indexOf(imageName, "/upload/");
        return StringUtils.substring(imageName,start);
    }

    public static boolean isProperPaper(String filename) {
        String suffix = getWordSuffix(filename);
        if (StringUtils.isAnyBlank(suffix)) {
            return false;
        }
        Pattern pattern = Pattern.compile(Constants.WORD_SUFFIX);
        Matcher matcher = pattern.matcher(suffix);
        return matcher.matches();
    }

    public static boolean isProperImage(String filename) {
        String suffix = getImageSuffix(filename);
        if (StringUtils.isAnyBlank(suffix)) {
            return false;
        }
        Pattern pattern = Pattern.compile(Constants.IMG_SUFFIX);
        Matcher matcher = pattern.matcher(suffix);
        return matcher.matches();
    }
}
