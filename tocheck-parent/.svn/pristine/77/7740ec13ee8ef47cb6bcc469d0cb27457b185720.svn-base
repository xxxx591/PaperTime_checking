package com.tocheck.parent.core.utils;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.tocheck.parent.common.constans.Constants;
import com.tocheck.parent.common.util.CookieUrlUtils;
import com.tocheck.parent.common.util.SSDBUtils;
import com.tocheck.parent.core.entity.AgentUser;
import org.apache.commons.lang3.RandomStringUtils;
import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.util.UUID;

/**
 * @author pangliang
 * @create 2017-06-15 10:48
 **/
@Component
public class TocheckUtil {

    private Logger logger = LoggerFactory.getLogger(TocheckUtil.class);
    @Autowired
    private SSDBUtils ssdbUtils;

    public String putPaperFreeSessionId(HttpServletRequest request, HttpServletResponse response) {
        String sessionId = UUID.randomUUID().toString() + RandomStringUtils.randomAlphabetic(10);
        String mySessionId = CookieUrlUtils.readCookie(request, Constants.TOCHECK_S_ID);
        if (StringUtils.isBlank(mySessionId)) {
            mySessionId = sessionId;
            CookieUrlUtils.writeCookie(response, Constants.TOCHECK_S_ID, mySessionId);
        }
        logger.debug("当前客户端有系统保存的sessionId={}", mySessionId);
        return sessionId;
    }

    public AgentUser getLoginUser(String sessionId, String userType) {
        String value = ssdbUtils.getValue(sessionId + userType);
        if (StringUtils.isNoneBlank(value)) {
            JSONObject json = JSON.parseObject(value);
            return JSON.toJavaObject(json, AgentUser.class);
        }
        return null;
    }

}
