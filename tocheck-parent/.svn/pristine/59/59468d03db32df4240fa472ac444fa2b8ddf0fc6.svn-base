<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tocheck.parent.core.dao.IToCheckTaskDao">
    <resultMap id="BaseResultMap" type="com.tocheck.parent.core.vo.ToCheckTaskVo">
        <id column="id" property="id" jdbcType="BIGINT" javaType="long"/>
        <result column="checkId" property="checkId" jdbcType="BIGINT" javaType="long"/>
        <result column="systemId" property="systemId" jdbcType="BIGINT" javaType="long"/>
        <result column="userId" property="userId" jdbcType="BIGINT" javaType="long"/>
        <result column="agentId" property="agentId" jdbcType="BIGINT" javaType="long"/>
        <result column="title" property="title" jdbcType="VARCHAR" javaType="String"></result>
        <result column="author" property="author" jdbcType="VARCHAR" javaType="String"/>
        <result column="wordNum" property="wordNum" jdbcType="INTEGER" javaType="int"/>
        <result column="target" property="target" jdbcType="BIGINT" javaType="long"/>
        <result column="coupon" property="coupon" jdbcType="BIGINT" javaType="long"/>
        <result column="money" property="money" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
        <result column="flowFee" property="flowFee" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
        <result column="targetFee" property="targetFee" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
        <result column="isMatch" property="isMatch" jdbcType="INTEGER" javaType="int"/>
        <result column="createdTime" property="createdTime"/>
        <result column="readUrl" property="readUrl" jdbcType="VARCHAR" javaType="String"/>
        <result column="downUrl" property="downUrl" jdbcType="VARCHAR" javaType="String"/>
        <result column="errorMsg" property="errorMsg" jdbcType="VARCHAR" javaType="String"/>
        <result column="deleteStatus" property="deleteStatus" jdbcType="INTEGER" javaType="int"/>
    </resultMap>

    <sql id="Base_Column_List">
        t1.id,t1.checkId,t1.systemId,t1.userId,t1.agentId,t1.target,t1.money,t1.flowFee,t1.targetFee,t1.isMatch,t1.title,t1.author,t1.wordNum,t1.status,t1.createdTime,t1.readUrl,t1.downUrl,t1.errorMsg,t1.deleteStatus
    </sql>

    <select id="getById" parameterType="long" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        from toCheckTask t1 where t1.deleteStatus != 0 and t1.id=#{id}
    </select>

    <select id="getByMap" parameterType="Map" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>,t2.systemName
        from toCheckTask t1 LEFT JOIN tocheckSystem t2 ON t1.systemId = t2.id where t1.deleteStatus != 0
        AND t1.systemId &lt; 4
        <if test="userId!=null">
            AND t1.userId=#{userId}
        </if>
        <if test="status!=null">
            AND t1.status=#{status}
        </if>
        <if test="systemId!=null">
            AND t1.systemId=#{systemId}
        </if>
        <if test="agentId!=null">
            <if test="agentId == 0">
                AND (t1.agentId=#{agentId} OR isMatch =0  or(TIMESTAMPDIFF(MINUTE,t1.createdTime,now()) &gt; 60 AND t1.status =0))
            </if>
            <if test="agentId != 0">
                AND t1.agentId=#{agentId} AND isMatch =1 AND (t1.status > 1 OR (TIMESTAMPDIFF(MINUTE,t1.createdTime,now()) &lt; 60 AND t1.status =0))
            </if>
        </if>
        ORDER BY t1.id DESC
    </select>

    <insert id="insert" parameterType="com.tocheck.parent.core.vo.ToCheckTaskVo" useGeneratedKeys="true"
            keyProperty="id">
        insert into toCheckTask(checkId,systemId,userId,agentId,title,author,wordNum,coupon,money,isMatch,status,readUrl) values
        (#{checkId},#{systemId},#{userId},#{agentId},#{title},#{author},#{wordNum},#{coupon},#{money},#{isMatch},#{status},#{readUrl})
    </insert>

    <update id="updateByMap" parameterType="Map">
        update toCheckTask
        <set>
            <if test="status!=null">
                status=#{status},
            </if>
            <if test="downUrl!=null">
                downUrl=#{downUrl},
            </if>
            <if test="checkId!=null">
                checkId=#{checkId},
            </if>
            <if test="target!=null">
                target=#{target},
            </if>
            <if test="flowFee!=null">
                flowFee=#{flowFee},
            </if>
            <if test="targetFee!=null">
                targetFee=#{targetFee},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="logicDelete" parameterType="Long">
        update toCheckTask set deleteStatus = 0 where id=#{id}
    </update>

</mapper>